// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Render All Custom Components:  Render Custom Button 1`] = `
<View>
  <View
    accessibilityState={
      Object {
        "disabled": false,
      }
    }
    accessible={true}
    collapsable={false}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "backgroundColor": "rgb(112,202,230)",
        "borderRadius": 10,
        "elevation": 0,
        "margin": 20,
        "opacity": 1,
        "paddingHorizontal": 12,
        "paddingVertical": 10,
      }
    }
  >
    <Text
      style={
        Array [
          Object {
            "alignSelf": "center",
            "color": "#fff",
            "fontSize": 18,
            "fontWeight": "bold",
            "textTransform": "uppercase",
          },
          null,
        ]
      }
    >
      bottone
    </Text>
  </View>
</View>
`;

exports[`Render All Custom Components:  Render Custom Image Button 1`] = `
<View
  accessibilityState={
    Object {
      "disabled": false,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "opacity": 1,
    }
  }
  testID="ImageButton"
>
  <View
    style={null}
  >
    <Image
      source={
        Object {
          "testUri": "../../../src/assets/plus.png",
        }
      }
      style={
        Object {
          "height": 50,
          "width": 50,
        }
      }
    />
  </View>
</View>
`;

exports[`Render All Custom Container:  Render InputsBlock 1`] = `
<View
  style={
    Array [
      Object {
        "backgroundColor": "#285AA4",
        "borderRadius": 8,
        "elevation": 50,
        "marginTop": 10,
        "paddingHorizontal": 12,
        "paddingVertical": 25,
      },
    ]
  }
>
  <View
    style={
      Array [
        Object {
          "marginLeft": "5%",
          "marginTop": 10,
          "width": "90%",
        },
        Object {},
        Object {
          "width": "90%",
        },
      ]
    }
  >
    <Text
      style={
        Object {
          "color": "white",
          "fontSize": 20,
          "fontWeight": "bold",
        }
      }
    />
    <View
      style={
        Array [
          Object {
            "flexDirection": "column",
            "width": "100%",
          },
        ]
      }
    >
      <View>
        <View
          accessibilityState={
            Object {
              "disabled": false,
            }
          }
          accessible={true}
          collapsable={false}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "backgroundColor": "rgb(112,202,230)",
              "borderRadius": 10,
              "elevation": 0,
              "margin": 20,
              "opacity": 1,
              "paddingHorizontal": 12,
              "paddingVertical": 10,
            }
          }
        >
          <Text
            style={
              Array [
                Object {
                  "alignSelf": "center",
                  "color": "#fff",
                  "fontSize": 18,
                  "fontWeight": "bold",
                  "textTransform": "uppercase",
                },
                null,
              ]
            }
          >
            bottone
          </Text>
        </View>
      </View>
    </View>
  </View>
</View>
`;

exports[`Render All Custom Container:  Render InputsContainer 1`] = `
<View
  style={
    Array [
      Object {
        "flexDirection": "column",
        "justifyContent": "center",
        "marginLeft": 10,
        "marginTop": 5,
      },
      undefined,
    ]
  }
>
  <Text
    style={
      Object {
        "alignSelf": "center",
        "color": "#fff",
        "fontSize": 18,
        "fontWeight": "600",
        "marginLeft": 10,
      }
    }
  />
  <View
    style={
      Array [
        Object {},
        undefined,
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "backgroundColor": "#285AA4",
            "borderRadius": 8,
            "elevation": 50,
            "marginTop": 10,
            "paddingHorizontal": 12,
            "paddingVertical": 25,
          },
        ]
      }
    >
      <View
        style={
          Array [
            Object {
              "marginLeft": "5%",
              "marginTop": 10,
              "width": "90%",
            },
            Object {},
            Object {
              "width": "90%",
            },
          ]
        }
      >
        <Text
          style={
            Object {
              "color": "white",
              "fontSize": 20,
              "fontWeight": "bold",
            }
          }
        />
        <View
          style={
            Array [
              Object {
                "flexDirection": "column",
                "width": "100%",
              },
            ]
          }
        >
          <View>
            <View
              accessibilityState={
                Object {
                  "disabled": false,
                }
              }
              accessible={true}
              collapsable={false}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "backgroundColor": "rgb(112,202,230)",
                  "borderRadius": 10,
                  "elevation": 0,
                  "margin": 20,
                  "opacity": 1,
                  "paddingHorizontal": 12,
                  "paddingVertical": 10,
                }
              }
            >
              <Text
                style={
                  Array [
                    Object {
                      "alignSelf": "center",
                      "color": "#fff",
                      "fontSize": 18,
                      "fontWeight": "bold",
                      "textTransform": "uppercase",
                    },
                    null,
                  ]
                }
              >
                first
              </Text>
            </View>
          </View>
        </View>
      </View>
    </View>
    <View
      style={
        Array [
          Object {
            "backgroundColor": "#285AA4",
            "borderRadius": 8,
            "elevation": 50,
            "marginTop": 10,
            "paddingHorizontal": 12,
            "paddingVertical": 25,
          },
        ]
      }
    >
      <View
        style={
          Array [
            Object {
              "marginLeft": "5%",
              "marginTop": 10,
              "width": "90%",
            },
            Object {},
            Object {
              "width": "90%",
            },
          ]
        }
      >
        <Text
          style={
            Object {
              "color": "white",
              "fontSize": 20,
              "fontWeight": "bold",
            }
          }
        />
        <View
          style={
            Array [
              Object {
                "flexDirection": "column",
                "width": "100%",
              },
            ]
          }
        >
          <View>
            <View
              accessibilityState={
                Object {
                  "disabled": false,
                }
              }
              accessible={true}
              collapsable={false}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "backgroundColor": "rgb(112,202,230)",
                  "borderRadius": 10,
                  "elevation": 0,
                  "margin": 20,
                  "opacity": 1,
                  "paddingHorizontal": 12,
                  "paddingVertical": 10,
                }
              }
            >
              <Text
                style={
                  Array [
                    Object {
                      "alignSelf": "center",
                      "color": "#fff",
                      "fontSize": 18,
                      "fontWeight": "bold",
                      "textTransform": "uppercase",
                    },
                    null,
                  ]
                }
              >
                second
              </Text>
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
</View>
`;

exports[`Render All Custom Container:  Render MarginContainer 1`] = `
<View
  style={
    Array [
      Object {
        "marginLeft": "5%",
        "marginTop": 10,
        "width": "90%",
      },
      Object {},
      Object {
        "width": "90%",
      },
    ]
  }
>
  <View>
    <View
      accessibilityState={
        Object {
          "disabled": false,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "rgb(112,202,230)",
          "borderRadius": 10,
          "elevation": 0,
          "margin": 20,
          "opacity": 1,
          "paddingHorizontal": 12,
          "paddingVertical": 10,
        }
      }
    >
      <Text
        style={
          Array [
            Object {
              "alignSelf": "center",
              "color": "#fff",
              "fontSize": 18,
              "fontWeight": "bold",
              "textTransform": "uppercase",
            },
            null,
          ]
        }
      >
        second
      </Text>
    </View>
  </View>
</View>
`;

exports[`Render All Custom Container:  Render WaitLoading 1`] = `
<View>
  <View>
    <View
      accessibilityState={
        Object {
          "disabled": false,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "rgb(112,202,230)",
          "borderRadius": 10,
          "elevation": 0,
          "margin": 20,
          "opacity": 1,
          "paddingHorizontal": 12,
          "paddingVertical": 10,
        }
      }
    >
      <Text
        style={
          Array [
            Object {
              "alignSelf": "center",
              "color": "#fff",
              "fontSize": 18,
              "fontWeight": "bold",
              "textTransform": "uppercase",
            },
            null,
          ]
        }
      >
        Button Appeared, No Loading
      </Text>
    </View>
  </View>
</View>
`;

exports[`Render All Custom Container:  Render WaitLoading 2`] = `
<View>
  <ActivityIndicator />
</View>
`;
